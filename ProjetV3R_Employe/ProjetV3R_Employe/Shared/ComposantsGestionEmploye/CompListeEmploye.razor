@using ProjetV3R_Employe.Data.Models
@inject EmployeService EmployeService

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

<h3>Liste des Employés</h3>
@if (employes == null || roles == null)
{
    <p>Chargement des données...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Rôle</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employe in employes)
            {
                <tr>
                    <td>@employe.Email</td>
                    <td>@roles.FirstOrDefault(r => r.IdRole == employe.Role)?.NomRole</td>
                    <td>
                        <button @onclick="() => OnModifierEmploye.InvokeAsync(employe)" class="btn btn-warning">Modifier</button>
                        <button @onclick="() => OnSupprimerEmploye.InvokeAsync(employe)" class="btn btn-danger">Supprimer</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public EventCallback<User> OnEmployeSelectionne { get; set; }
    [Parameter]
    public EventCallback<User> OnModifierEmploye { get; set; }
    [Parameter]
    public EventCallback<User> OnSupprimerEmploye { get; set; }

    private List<User> employes = new List<User>();
    private List<Role> roles = new List<Role>();
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await ChargerEmployes();
        await ChargerRoles();
    }

    public async Task RechargerAsync()
    {
        await ChargerEmployes();
    }

    private async Task ChargerEmployes()
    {
        try
        {
            employes = await EmployeService.ObtenirEmployesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "Une erreur est survenue lors du chargement des employés. Veuillez réessayer.";
            Console.Error.WriteLine($"Erreur dans CompListeEmploye - ChargerEmployes: {ex.Message}");
        }
    }

    private async Task SelectionnerEmploye(User employe)
    {
        await OnEmployeSelectionne.InvokeAsync(employe);
    }

    private async Task ChargerRoles()
    {
        try
        {
            roles = await EmployeService.ObtenirRolesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "Une erreur est survenue lors du chargement des rôles. Veuillez réessayer.";
            Console.Error.WriteLine($"Erreur dans CompListeEmploye - ChargerRoles: {ex.Message}");
        }
    }

}
