@using ProjetV3R_Employe.Data.Models;
@inject EmployeService EmployeService

<div class="border p-3">
    <h4>Ajouter un nouvel employé</h4>
    <EditForm Model="@nouvelEmploye" OnValidSubmit="AjouterEmploye">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label>Email</label>
            <InputText @bind-Value="nouvelEmploye.Email" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Rôle</label>
            <InputSelect @bind-Value="nouvelEmploye.Role" TValue="int" class="form-control">
                <option value="0">-- Sélectionner un rôle --</option>
                @foreach (var role in roles)
                {
                    <option value="@role.IdRole">@role.NomRole</option>
                }
            </InputSelect>
        </div>
        <button type="submit" class="btn btn-primary">Ajouter</button>
        <button type="button" class="btn btn-secondary" @onclick="Annuler">Annuler</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(messageErreur))
    {
        <div class="alert alert-danger mt-3">@messageErreur</div>
    }
</div>

@code {
    [Parameter] public EventCallback OnEmployeAjoute { get; set; }

    private User nouvelEmploye = new();
    private List<Role> roles = new();
    private string? messageErreur;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            roles = await EmployeService.ObtenirRolesAsync();
        }
        catch (Exception ex)
        {
            messageErreur = $"Erreur lors du chargement des rôles : {ex.Message}";
        }
    }

    private async Task AjouterEmploye()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(nouvelEmploye.Email))
            {
                messageErreur = "L'email est obligatoire.";
                return;
            }

            if (nouvelEmploye.Role == 0)
            {
                messageErreur = "Veuillez sélectionner un rôle.";
                return;
            }

            await EmployeService.AjouterEmployeAsync(nouvelEmploye);
            nouvelEmploye = new();
            messageErreur = null;
        }
        catch (Exception ex)
        {
            messageErreur = $"{ex.Message}";
        }
    }

    private void Annuler()
    {
        nouvelEmploye = new(); // Réinitialiser le formulaire
    }
}

