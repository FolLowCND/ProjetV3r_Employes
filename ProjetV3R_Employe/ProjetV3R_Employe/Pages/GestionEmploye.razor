@page "/gestion-employes"
@using ProjetV3R_Employe.Data.Models;
@inject NavigationManager Navigation
@using ProjetV3R_Employe.Shared.ComposantsGestionEmploye


<h2>Gestion des Employés</h2>

<button class="btn btn-success mb-3" @onclick="AfficherFormulaireAjout">Ajouter un employé</button>

@if (afficherAjout)
{
    <CompAjoutEmploye OnEmployeAjoute="RafraichirListe" />
}

@if (employeAEditerId.HasValue)
{
    <CompModifEmploye EmployeId="employeAEditerId.Value" OnModificationTerminee="TerminerModification" />
}
else
{
    <CompListeEmploye OnModifier="ModifierEmploye" />
}

@if (employeASupprimer != null)
{
    <CompSuppEmploye Employe="employeASupprimer" AfficherModal="true" OnSuppressionTerminee="RafraichirListe" />
}

@if (!string.IsNullOrEmpty(messageErreur))
{
    <div class="alert alert-danger mt-3">@messageErreur</div>
}


@code {
    private bool afficherAjout = false;
    private CompListeEmploye? listeEmployes;
    private User? employeASupprimer;
    private string? messageErreur;


    private void AfficherFormulaireAjout()
    {
        afficherAjout = true;
    }

    private async Task RafraichirListe()
    {
        try
        {
            afficherAjout = false;
            employeAEditerId = null;
        }
        catch (Exception ex)
        {
            messageErreur = $"Erreur lors du rafraîchissement : {ex.Message}";
        }
    }


    private int? employeAEditerId;

    private void ModifierEmploye(int employeId)
    {
        employeAEditerId = employeId;
    }

    private void TerminerModification()
    {
        employeAEditerId = null;
    }

}