@page "/gestion-employes"
@using ProjetV3R_Employe.Data.Models
@using ProjetV3R_Employe.Shared.ComposantsGestionEmploye
@inject EmployeService EmployeService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@attribute [Authorize(Roles = "Administrateur")]


<AuthorizeView Roles="Administrateur">
    <h3>Gestion des Employés</h3>
    <p>Page accessible uniquement aux administrateurs.</p>


    <button class="btn btn-success" @onclick="AfficherFormulaireAjout">Ajouter un Employé</button>

    @if (formulaireVisible)
    {
        <CompAjoutEmploye OnEmployeAjoute="RechargerEmployes" />
    }

    <CompListeEmploye @ref="listeEmployes" OnModifierEmploye="EditerEmploye" />
</AuthorizeView>

@code {
    private bool formulaireVisible;
    private User employeSelectionne = new User();
    private CompListeEmploye? listeEmployes;

    private bool isAuthorized = false;
    private string? role;
    private string? email;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            role = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
            email = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value;

            if (role == "Administrateur" || role == "Tenant-Admin")
            {
                isAuthorized = true;
            }
            else
            {
                Navigation.NavigateTo("/access-denied", forceLoad: true);
            }
        }
        else
        {
            Navigation.NavigateTo("/", forceLoad: true);
        }
    }

    private void AfficherFormulaireAjout()
    {
        employeSelectionne = new User(); // Réinitialiser pour un ajout
        formulaireVisible = true;
    }

    private void EditerEmploye(User employe)
    {
        employeSelectionne = employe; // Charger l'employé existant pour édition
        formulaireVisible = true;
    }

    private async Task RechargerEmployes()
    {
        formulaireVisible = false;
        if (listeEmployes != null)
        {
            await listeEmployes.RechargerAsync();
        }
    }
}
